"use strict";
/**
* A Vanilla JS library to simply use EthereumList's data
* @author Dorian Bayart
* @version 0.1.0
* @license MIT
*/const CHAINLIST_URL="https://chainid.network/chains.json";let chainList;class ChainList{#list;constructor(r){this.#list=r.filter(r=>r.explorers?.find(r=>"EIP3091"===r.standard)).map(r=>new Chain(r))}static fetch=async()=>{var r=await(await fetch(CHAINLIST_URL)).json();return chainList=new ChainList(r)};getList(){return this.#list}getByChainId(t){return this.getList().find(r=>r.chainId()===t)}searchByName(t){return this.getList().filter(r=>r.name().toLowerCase().includes(t.toLowerCase()))}}class Chain{#chain;#chainId;#explorer;#infoURL;#name;#nativeCurrency;#shortName;constructor(r){this.#chain=r.chain,this.#chainId=r.chainId,this.#explorer=r.explorers?.find(r=>"EIP3091"===r.standard),this.#infoURL=r.infoURL,this.#name=r.name,this.#nativeCurrency=r.nativeCurrency,this.#shortName=r.shortName}static fetchChain=async t=>{var r;return chainList&&chainList.getList().length?chainList.getList().find(r=>r.chainId()===t):(r=await(await fetch(CHAINLIST_URL)).json(),new Chain(r.find(r=>r.chainId()===t)))};chain(){return this.#chain}chainId(){return this.#chainId}explorerName(){if(this.#explorer?.name)return this.#explorer.name}explorerUrl(){if(this.#explorer?.url)return this.#explorer.url}infoURL(){return this.#infoURL}name(){return this.#name}nativeCurrency(){return this.#nativeCurrency}shortName(){return this.#shortName}block(r){if(this.explorerUrl())return this.explorerUrl()+"/block/"+r}tx(r){if(this.explorerUrl())return this.explorerUrl()+"/tx/"+r}address(r){if(this.explorerUrl())return this.explorerUrl()+"/address/"+r}token(r){if(this.explorerUrl())return this.explorerUrl()+"/token/"+r}}